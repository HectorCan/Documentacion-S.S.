#include <stdio.h>

struct node {
    bool isValid;
    int x;
    node *next;
};

struct node *stack = NULL;

struct node *createNode(int x, bool isValid)
{
    struct node *item = new node;
    item->x = x;
    item->isValid = isValid;
    item->next = item;

    return item;
}

void initializeStack()
{
    stack = createNode(0, false);
}

bool isEmpty()
{
    return !stack->isValid;
}

bool push(struct node * item)
{
    if (!item->isValid) {
        return false;
    }

    if (isEmpty()) {
        stack = item;
    } else {
        struct node * iterator = stack;

        while (iterator->next != iterator) {
            iterator = iterator->next;
        }

        iterator->next = item;
    }

    return true;
}

struct node *pop()
{
    if (isEmpty()) {
        return stack;
    }

    struct node *iterator = stack;
    struct node *previous = NULL;

    while (iterator->next != iterator) {
        previous = iterator;
        iterator = iterator->next;
    }

    // Only one item was in the stack
    if (previous == NULL) {
        iterator->isValid = false;
    } else {
        previous->next = previous;
    }
    
    return iterator;
}

void display()
{
    struct node * iterator = stack;

    while (iterator->next != iterator) {
        printf("isValid %d \n", iterator->isValid);
        printf("x: %d\n", iterator->x);
        iterator = iterator->next;
    }

     printf("isValid %d \n", iterator->isValid);
        printf("x: %d\n", iterator->x);
}

int main()
{
    initializeStack();

    if (isEmpty()) {
        printf("isEmpty\n");
    }

    struct node *retrieveItem0 = pop();
    printf("x %d\n", retrieveItem0->x);

    struct node * item1 = createNode(1, true);
    struct node * item2 = createNode(2, true);

    push(item1);
    push(item2);

    if (!isEmpty()) {
        display();
    }

    struct node * retrieveItem2 = pop();

    printf("isValid %d", retrieveItem2->isValid);
    printf("x %d", retrieveItem2->x);

    if (!isEmpty()) {
        printf("has something\n");
    }

    struct node * retrieveItem1 = pop();
    printf("isValid %d", retrieveItem1->isValid);
    printf("x %d", retrieveItem1->x);

    if (isEmpty()) {
        printf("no has something\n");
    }
    return 0;
}